# Generated by Selenium IDE
import time

from selenium import webdriver
from selenium.webdriver import Keys
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.common.by import By


# from conf import settings

class TestAotu():
    def setup_method(self):
        # self.chrome_options = webdriver.ChromeOptions()
        # # 当google浏览器不是默认安装的时候，需要设置浏览器（也可以是其他浏览器，例如360安全浏览器）
        # self.chrome_options.binary_location = r"C:\Users\Administrator\AppData\Local\Google\Chrome\Application\chrome.exe"
        #
        # self.driver = webdriver.Chrome(
        #     # executable_path="chromedriver.exe",  # chrome驱动器位置
        #     executable_path=settings.options["chromedriver"],  # chrome驱动器位置
        #     options=self.chrome_options,  # 扩展信息
        # )

        global driver
        # 　谷歌浏览器
        # self.driver = webdriver.Chrome()
        # edge浏览器
        self.driver = webdriver.Edge()
        self.vars = {}

    def teardown_method(self):
        self.driver.quit()

    def test_aotu(self):
        self.driver.get("https://www.baidu.com/")
        self.driver.set_window_size(1936, 1056)
        # self.driver.maximize_window();
        self.driver.find_element(By.ID, "s-top-loginbtn").click()

        # 获取 cookie， selenium类型是列表
        cookie_ = self.driver.get_cookies()
        print("cookie: ", cookie_)

        # self.driver.find_element(By.XPATH,
        #                          "/html/body/div[7]/div[2]/div[2]/div/div/div/div/div/div[1]/div[2]/form/p[3]/input[2]").send_keys(
        #     "18707677500")
        # div弹框需要等待时间 才能获取到css标签
        time.sleep(2)
        self.driver.find_element(By.ID, "TANGRAM__PSP_11__userName").send_keys("18707677500")
        self.driver.find_element(By.ID, "TANGRAM__PSP_11__password").send_keys("100")
        # self.driver.find_element(By.ID, "TANGRAM__PSP_11__submit").click()
        element = self.driver.find_element(By.ID, "TANGRAM__PSP_11__submit")
        # self.driver.find_element_by_css_selector('#u1 > a.s-top-login-btn.c-btn.c-btn-primary.c-btn-mini.lb').click()
        actions = ActionChains(self.driver)
        actions.move_to_element(element).perform()


        # 添加cookies
        for item in cookie_:
            # 以字典的方式添加
            self.driver.add_cookie(item)

        # 跳转页面
        self.driver.get(
            "https://www.baidu.com/s?wd=%E5%9C%B0%E5%9B%BE%E5%9C%A8%E7%BA%BF&ie=utf-8&tn=88093251_59_hao_pg")

        # cookie = {'name': 'Cookie',
        #           'value': 'PHPSESSID=fb04fa6cd22dae22c880b243477c8e3e; acw_tc=65c86a0a16209584766092062ef9dac115cea72764b357d21c5221efa4b7e0'}
        # self.driver.add_cookie(cookie)

        element = self.driver.find_element(By.ID, "kw")
        # 清除查询框数据
        element.clear()
        element.send_keys("喝茶")
        # 百度一下
        self.driver.find_element(By.ID, "su").click()
        # srcElement = self.driver.find_element(By.CSS_SELECTOR, "#result_logo > img.index-logo-src")
        # ActionChains(self.driver).move_to_element(srcElement).perform()
        # 不关闭浏览器
        ActionChains(self.driver).key_down(Keys.CONTROL).send_keys("t").key_up(Keys.CONTROL).perform()
        # 获得当前窗口句柄
        # sreach_windows = self.driver.current_window_handle
        # 获得当前所有打开的窗口的句柄
        # all_handles = self.driver.window_handles
        # for handle in all_handles:
        #     self.driver.switch_to.window(handle)
        #     self.driver.close()
        #     time.sleep(2)

        # 不关闭浏览器
        # actions.move_to_element(element).perform()


if __name__ == '__main__':
    au = TestAotu()
    au.setup_method()
    au.test_aotu()
    # au.teardown_method()
    print(au.driver)
